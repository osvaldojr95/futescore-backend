// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  username String   @unique
  password String
  Session  Session?

  @@map("users")
}

model Session {
  id      Int    @id @default(autoincrement())
  userId  Int    @unique
  session String
  user    User   @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Leagues {
  id      Int       @id @default(autoincrement())
  name    String
  Seasons Seasons[]
  Teams   Teams[]

  @@map("leagues")
}

model Seasons {
  id           Int            @id @default(autoincrement())
  name         String
  leagueId     Int
  leagues      Leagues        @relation(fields: [leagueId], references: [id])
  Rounds       Rounds[]
  Games        Games[]
  Season_Teams Season_Teams[]

  @@map("seasons")
}

model Teams {
  id              Int               @id @default(autoincrement())
  name            String
  leagueId        Int
  shieldURL       String
  leagues         Leagues           @relation(fields: [leagueId], references: [id])
  HomeGame        Games[]           @relation("HomeTeam_referred")
  AwayGame        Games[]           @relation("AwayTeam_referred")
  Games_Statistic Games_Statistic[]
  Season_Teams    Season_Teams[]

  @@map("teams")
}

model Season_Teams {
  id       Int     @id @default(autoincrement())
  seasonId Int
  teamId   Int
  teams    Teams   @relation(fields: [teamId], references: [id])
  seasons  Seasons @relation(fields: [seasonId], references: [id])

  @@map("season_teams")
}

model Rounds {
  id       Int     @id @default(autoincrement())
  seasonId Int
  number   Int
  seasons  Seasons @relation(fields: [seasonId], references: [id])
  Games    Games[]

  @@map("rounds")
}

model Games {
  id              Int               @id @default(autoincrement())
  roundId         Int
  seasonId        Int
  homeTeamId      Int
  awayTeamId      Int
  done            Boolean
  rounds          Rounds            @relation(fields: [roundId], references: [id])
  seasons         Seasons           @relation(fields: [seasonId], references: [id])
  homeTeam        Teams             @relation("HomeTeam_referred", fields: [homeTeamId], references: [id])
  awayTeam        Teams             @relation("AwayTeam_referred", fields: [awayTeamId], references: [id])
  Games_Statistic Games_Statistic[]

  @@map("games")
}

model Games_Statistic {
  id            Int   @id @default(autoincrement())
  gameId        Int
  teamId        Int
  goals         Int
  kicks         Int?
  ballPossesion Int?
  passes        Int?
  passAcurracy  Int?
  faults        Int?
  yellowCards   Int?
  impediments   Int?
  corners       Int?
  games         Games @relation(fields: [gameId], references: [id])
  teams         Teams @relation(fields: [teamId], references: [id])

  @@map("games_statistic")
}
